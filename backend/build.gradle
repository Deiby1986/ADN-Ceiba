plugins {
    id 'org.springframework.boot' version '2.2.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'jacoco'
    id 'java'
    id "org.sonarqube" version "2.7"
}

apply plugin: 'java'
apply plugin: 'jacoco'

group = 'com.ventas'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		compileOnly 'org.projectlombok:lombok'
		runtimeOnly 'mysql:mysql-connector-java'
		annotationProcessor 'org.projectlombok:lombok'
		testCompile('org.springframework.boot:spring-boot-starter-test')
		//testCompile('org.mockito:mockito-junit-jupiter:2.23.0')
		//testCompile('org.junit.jupiter:junit-jupiter-engine')
		
		testImplementation('org.junit.jupiter:junit-jupiter-api:5.3.1')
    	testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.3.1')
  	    testImplementation 'org.mockito:mockito-all:1.10.19'
		
		testImplementation('org.springframework.boot:spring-boot-starter-test') {
				exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
		}
		runtime("com.h2database:h2:1.3.176")
		compile('org.modelmapper:modelmapper:1.1.0')
		implementation('io.springfox:springfox-swagger-ui:2.9.2')
		implementation('io.springfox:springfox-swagger2:2.9.2')		
}

test {
    useJUnitPlatform()
}


jacocoTestReport{
	additionalSourceDirs.from = files(sourceSets.main.allJava.srcDirs)
	reports {
		html.enabled true
		xml.enabled false
		csv.enabled false
		html.destination file("build/reports/jacoco/html")
	}
	executionData.from = files('build/jacoco/test.exec')
}